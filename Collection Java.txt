- Defintion
Collection in Java is a framework that provides an architecture to store and manipulate the group of objects.
Java Collections can achieve all the operations that you perform on a data such as searching, sorting, insertion, manipulation, and deletion.
Java Collection framework provides many interfaces (Set, List, Queue, Deque) and classes (ArrayList, Vector, LinkedList, PriorityQueue, HashSet, LinkedHashSet, TreeSet).

- Collection interface
Collection interface : denote the basic method while doing with collection, this is the reason to build the Java Collection Framework library.
Collection interface is inheritenced by Iterable Interface, so we can iterate the elements in a foward direction only.

- Set interface 
Set interace is extended by the Collection interface. It represents the unordered set of elements which doesn't allow us to store th duplicate items. We can store at most one null value in Set.
Set is implemented by HashSet, LinkedHashSet and TreeSet.
TreeSet: is a class execute the Set Interface, the elements in Set is ordered.
HashSet: is a class implement Set Interface that the elements are stored under hash table.
EnumSet: is likely 2 above, but the difference is that the elements in set is enum, not object

- List Interface:
It inhibits a list type data structure in which we can store the ordered collection of objects. It can have duplicate values.
List Interface is implemented by the classes ArrayList, LinkedList, Vector, and Stack.
ArrayList:
Java ArrayList class uses a dynamic array for storing the elements. It is like an array, but there is no size limit. We can add or remove elements anytime. So, it is much more flexible than the traditional array. 
LinkedList: Java LinkedList class uses a doubly linked list to store the elements. It provides a linked-list data structure. It inherits the AbstractList class and implements List and Deque interfaces.
Vector: Vector is like the dynamic array which can grow or shrink its size. Unlike array, we can store n-number of elements in it as there is no size limit. 
Stack: The stack is a linear data structure that is used to store the collection of objects. It is based on Last-In-First-Out (LIFO). Java collection framework provides many interfaces and classes to store the collection of objects. One of them is the Stack class that provides different operations such as push, pop, search, etc..

- Queue Interface:
Queue interface maintains the first-in-first-out order. It can be defined as an ordered list that is used to hold the elements which are about to be processed. There are various classes like PriorityQueue, PriorityDeque, and ArrayDeque which implements the Queue interface.

- Map Interface:
A map contains values on the basis of key, i.e. key and value pair. Each key and value pair is known as an entry. A Map contains unique keys.
A Map is useful if you have to search, update or delete elements on the basis of a key.
HashMap: is the implementation of Map, but it doesn't maintain any order.
LinkedHashMap: is the implementation of Map. It inherits HashMap class. It maintains insertion order.
TreeMap: is the implementation of Map and SortedMap. It maintains ascending order.